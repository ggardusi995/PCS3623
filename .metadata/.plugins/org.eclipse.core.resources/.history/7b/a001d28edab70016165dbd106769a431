package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;

import model.Viagem;

public class DAO {

	private static final DAO instance = new DAO();

	private DAO() {
		try {
			Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	private Connection getConnection() throws SQLException {
		return DriverManager.getConnection(
				"jdbc:postgresql://localhost:5432/TrabBD", "postgres", "1234");
	}

	public static DAO getInstance() {
		return instance;
	}

	public LinkedList<Viagem> selectViagem() {
		Connection conn = null;
		try {
			conn = getConnection();
			String query = "SELECT v.id,v.data_viagem,v.valor,m.nome,"
					+ "c.placa,p.origem,p.destino,i.nome "
					+ "FROM viagem v "
					+ "INNER JOIN motorista m ON v.id_motorista = m.id "
					+ "INNER JOIN cliente i ON v.id_cliente = i.id "
					+ "INNER JOIN carro c ON v.id_carro = c.id "
					+ "INNER JOIN percurso p ON v.id_percurso = p.id";
			PreparedStatement ps = conn.prepareStatement(query);
			// ps.setString(1, );
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				int id = rs.getInt("id");
				Date data = rs.getDate("data_viagem");
				double valor = rs.getDouble("valor");

			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return null;
	}

	public LinkedList<Object> select(LinkedList<String> fields, String table,
			String condition) {
		Connection conn = null;
		try {
			conn = getConnection();
			String query = "SELECT * FROM " + table;
			// for (String field : fields) {
			// query += (", " + table + "." + field);
			// }
			// query += (" FROM " + table);
			if (condition != null)
				query += (" WHERE " + condition);
			PreparedStatement ps = conn.prepareStatement(query);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {

			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return null;
	}
}
